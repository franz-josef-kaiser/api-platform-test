version: "3.4"

services:
  php:
    build:
      context: ./api
      target: api_platform_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/php-socket
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  nginx:
    image: "nginx:1.14-alpine"
    restart: on-failure
    working_dir: /srv/apie
    depends_on:
      - php
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Align host and container timezone
      - /etc/localtime:/etc/localtime:ro
      # Nginx server conf
      - ${PWD}/nginx:/etc/nginx:ro
      # Dev Root cert CA
      # Cert and key: Auto-symlink to /etc/ssl/certs
      # - cert-storage:/usr/local/share/ca-certificates
      - ${PWD}/api:/srv/api
      - php_socket:/php-socket
    tmpfs:
      - /run
      - /tmp

#  pwa:
#    build:
#      context: ./pwa
#      target: api_platform_pwa_prod
#    environment:
#      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://caddy
#      NEXT_PUBLIC_ENTRYPOINT: http://caddy

#  caddy:
#    build:
#      context: api/
#      target: api_platform_caddy
#    depends_on:
#      - php
#      - pwa
#    environment:
#      PWA_UPSTREAM: pwa:3000
#      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
#      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
#      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
#    restart: unless-stopped
#    volumes:
#      - php_socket:/var/run/php
#      - caddy_data:/data
#      - caddy_config:/config
#    ports:
#      # HTTP
#      - target: 80
#        published: 80
#        protocol: tcp
#      # HTTPS
#      - target: 443
#        published: 443
#        protocol: tcp
#      # HTTP/3
#      - target: 443
#        published: 443
#        protocol: udp

  database:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=!ChangeMe!
      - POSTGRES_USER=api-platform
    volumes:
      - db_data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw

volumes:
  php_socket:
  db_data:
